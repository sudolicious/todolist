name: $(Date:yyyyMMdd)-$(GitVersion.MajorMinorPatch)-$(Rev:.r)

trigger:
  branches:
    include:
      - main

pool: Default

variables:
  imageName: 'sudolicious1/todolist-backend'

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤—Ç–æ—Ä–æ–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (Helm charts)
resources:
  repositories:
    - repository: k8s
      type: github
      name: sudolicious/k8s
      endpoint: sudolicious   # –∏–º—è GitHub service connection –≤ Azure DevOps

stages:
# üîñ –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é
- stage: GetVersion
  displayName: 'üîñ Get Version'
  jobs:
  - job: GetVersionJob
    steps:
    - checkout: self
      fetchDepth: 0
      persistCredentials: true
      clean: true
      fetchTags: true

    - script: |
        VERSION=$(dotnet exec /home/olga/.dotnet/tools/.store/gitversion.tool/6.4.0/gitversion.tool/6.4.0/tools/net8.0/any/gitversion.dll /showvariable MajorMinorPatch)
        CURRENT_DATE=$(date +%Y%m%d)
        echo "##vso[build.updatebuildnumber]${CURRENT_DATE}-${VERSION}-$(Rev:r)"
        echo "##vso[task.setvariable variable=AppVersion;isOutput=true]$VERSION"

        mkdir -p $(Build.ArtifactStagingDirectory)/version-info
        echo "APP_VERSION=$VERSION" > $(Build.ArtifactStagingDirectory)/version-info/version.env
        echo "BUILD_DATE=$CURRENT_DATE" >> $(Build.ArtifactStagingDirectory)/version-info/version.env
      name: setVersion
      displayName: 'Get version with GitVersion'

    - publish: $(Build.ArtifactStagingDirectory)/version-info
      artifact: version-info

# üèóÔ∏è –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞
- stage: Build
  displayName: 'üèóÔ∏è Build'
  dependsOn: GetVersion
  jobs:
  - job: Build
    steps:
    - checkout: self
    - download: current
      artifact: version-info

    - script: |
        source $(Pipeline.Workspace)/version-info/version.env
        echo "##vso[task.setvariable variable=DockerAppVersion]$APP_VERSION"
      displayName: 'Set Docker version variable'

    - task: Docker@2
      inputs:
        command: 'login'
        containerRegistry: 'docker-hub-connection'

    - task: Docker@2
      inputs:
        command: 'build'
        repository: '$(imageName)'
        dockerfile: 'backend/Dockerfile'
        buildContext: 'backend'
        tags: |
          $(DockerAppVersion)
          latest

# üöÄ Push –æ–±—Ä–∞–∑–∞ –≤ Docker Hub
- stage: Push
  displayName: 'üöÄ Push'
  dependsOn: Build
  jobs:
  - job: Push
    steps:
    - download: current
      artifact: version-info

    - script: |
        source $(Pipeline.Workspace)/version-info/version.env
        echo "##vso[task.setvariable variable=DockerAppVersion]$APP_VERSION"
      displayName: 'Set Docker version variable'

    - task: Docker@2
      inputs:
        command: 'login'
        containerRegistry: 'docker-hub-connection'

    - task: Docker@2
      inputs:
        command: 'push'
        repository: '$(imageName)'
        tags: |
          $(DockerAppVersion)
          latest

# üìù –û–±–Ω–æ–≤–ª—è–µ–º Helm chart –≤ k8s —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
- stage: UpdateManifests
  displayName: 'üìù Update Helm Chart'
  dependsOn: Push
  jobs:
  - job: UpdateHelmChart
    steps:
    - checkout: k8s
      persistCredentials: true

    - download: current
      artifact: version-info

    - script: |
        cd todolist.v2/backend

        echo "Loading version info..."
        source $(Pipeline.Workspace)/version-info/version.env
        echo "Updating to version: $APP_VERSION"

        # –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–≥ –≤ values.yaml
        sed -i "s|tag:.*|tag: \"$APP_VERSION\"|g" values.yaml

        echo "Updated values.yaml:"
        grep -A3 -B3 "image:" values.yaml

        # git config
        git config user.email "azure-devops-pipeline@noreply.com"
        git config user.name "Azure DevOps Pipeline"

        # –∫–æ–º–º–∏—Ç–∏–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
        git add values.yaml
        git diff-index --quiet HEAD || git commit -m "ci: update image tag to $APP_VERSION"
        git diff-index --quiet HEAD || git push origin main
      displayName: 'Update Helm chart'


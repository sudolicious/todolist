name: $(Date:yyyyMMdd)-$(GitVersion.MajorMinorPatch)-$(Rev:.r)

trigger:
  branches:
    include:
      - main

pool: Default

stages:
# üîñ Stage: GetVersion
- stage: GetVersion
  displayName: 'üîñ Get Version'
  jobs:
  - job: GetVersion
    displayName: 'Get version with GitVersion'
    steps:
    - checkout: self
      fetchDepth: 0
      persistCredentials: true
      clean: true
      fetchTags: true

    - script: |
        VERSION=$(dotnet exec /home/olga/.dotnet/tools/.store/gitversion.tool/6.4.0/gitversion.tool/6.4.0/tools/net8.0/any/gitversion.dll /showvariable MajorMinorPatch)
        FULL_VERSION=$(dotnet exec /home/olga/.dotnet/tools/.store/gitversion.tool/6.4.0/gitversion.tool/6.4.0/tools/net8.0/any/gitversion.dll /showvariable FullSemVer)
        CURRENT_DATE=$(date +%Y%m%d)

        echo "##vso[build.updatebuildnumber]${CURRENT_DATE}-${VERSION}-$(Rev:r)"
        echo "##vso[task.setvariable variable=AppVersion;isOutput=true]$VERSION"
        echo "##vso[task.setvariable variable=FullVersion;isOutput=true]$FULL_VERSION"

        echo "Detected AppVersion: $VERSION"
        echo "Detected FullVersion: $FULL_VERSION"
      name: setVersion
      displayName: 'Get version using GitVersion'

# üìù Stage: Update Helm Chart
- stage: UpdateHelmChart
  displayName: 'üìù Update Helm Chart'
  dependsOn: GetVersion
  condition: succeeded()
  jobs:
  - job: UpdateHelm
    displayName: 'Update Helm chart version'
    variables:
      AppVersion: $[ stageDependencies.GetVersion.GetVersion.outputs['setVersion.AppVersion'] ]
    steps:
    - script: |
        echo "Updating Helm chart to version: $(AppVersion)"

        # Debug: check token presence
        echo "Token length: ${#SYSTEM_ACCESSTOKEN}"
        echo "Token starts with: ${SYSTEM_ACCESSTOKEN:0:5}"

        # Clone k8s repo with pipeline token
        git clone https://oauth2:$SYSTEM_ACCESSTOKEN@github.com/sudolicious/k8s.git k8s-repo

        cd k8s-repo

        # Update values.yaml
        sed -i "s|tag:.*|tag: \"$(AppVersion)\"|g" todolist.v2/backend/values.yaml

        # Git config for commit
        git config user.email "azure-devops-pipeline@noreply.com"
        git config user.name "Azure DevOps Pipeline"

        # Commit and push
        git add todolist.v2/backend/values.yaml
        git commit -m "ci: update image tag to version $(AppVersion)" || echo "No changes to commit"
        git push origin main

        echo "‚úÖ Helm chart tag updated to: $(AppVersion)"
      displayName: 'Update Helm chart version'
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)

